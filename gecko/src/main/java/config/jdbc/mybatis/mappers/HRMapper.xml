<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	 
<mapper namespace="nz.pe.gecko.template.hr.HrDAO">
	<!-- name of DAO interface, which should be implemented by this mapper xml -->

	<!-- if db column name and vo field name are different, it could be mapped 
		as follows -->
	<resultMap type="nz.pe.gecko.template.hr.EmpVO" id="EmpResultMap">
		<!-- <result property="_name" column="NAME" /> <result property="email" 
			column="EMAIL" /> <result property="phone" column="PHONE" /> -->
	</resultMap>	 

	<!-- id attribute should be same with method name of DAO interface -->
	<select id="getEmployees" resultMap="EmpResultMap">
		SELECT * FROM emp
	</select>
	
	<!-- resultType for single result, resultMap for multi-row results -->
	<select id="getEmployeeCount" resultType="java.lang.Integer">
		SELECT count(empno) FROM
		emp
	</select>
	
	<!-- parameterType could be class name with full packages or class alias -->
	<!-- in Oracle database... null parameter makes errors, in these case... 
	     define the jdbcType as follows... makes null insert to table   -->
	<insert id="insertEmployee" parameterType="nz.pe.gecko.template.hr.EmpVO">
		INSERT INTO emp (empno, ename, job, mgr, hiredate, sal, comm, deptno)
		values(#{empno},#{ename},#{job}, #{mgr}, #{hiredate}, #{sal}, #{comm}, #{deptno})
	</insert>	
	
	<update id="updateEmployee" parameterType="nz.pe.gecko.template.hr.EmpVO">
		UPDATE emp SET
			ename = #{ename},
			job = #{job},
			mgr = #{mgr},
			hiredate = #{hiredate},
			sal = #{sal},
			comm = #{comm},
			deptno = #{deptno}
		WHERE empno = #{empno}
	</update>	
	
	<select id="getEmployeeDetail" resultType="nz.pe.gecko.template.hr.EmpVO" parameterType="nz.pe.gecko.template.hr.EmpVO">
		SELECT * FROM emp
			<if test="empno != 0">
				WHERE empno=#{empno}
			</if>
			<if test="empno == 0">
				WHERE ename='KING'
			</if>
	</select>
	 	<delete id="deleteEmployee">
		DELETE FROM emp
		WHERE empno=#{empno}
	</delete>
</mapper>

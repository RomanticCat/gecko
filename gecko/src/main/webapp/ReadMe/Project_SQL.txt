HR Schema
---------------------------------------------------------------------------------------
CREATE TABLE 'dept' (
  'DEPTNO' int(11) NOT NULL,
  'DNAME' varchar(14) DEFAULT NULL,
  'LOC' varchar(13) DEFAULT NULL,
  PRIMARY KEY ('DEPTNO'),
  KEY 'index_tb_dept_dname' ('DNAME')
) ENGINE=InnoDB DEFAULT CHARSET=utf8

CREATE TABLE 'emp' (
  'EMPNO' int(11) NOT NULL,
  'ENAME' varchar(10) DEFAULT NULL,
  'JOB' varchar(9) DEFAULT NULL,
  'MGR' float DEFAULT NULL,
  'HIREDATE' timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  'SAL' float DEFAULT NULL,
  'COMM' float DEFAULT NULL,
  'DEPTNO' int(11) DEFAULT NULL,
  PRIMARY KEY ('EMPNO'),
  KEY 'emp_dept_FK' ('DEPTNO'),
  CONSTRAINT 'emp_dept_FK' FOREIGN KEY ('DEPTNO') REFERENCES 'dept' ('DEPTNO')
) ENGINE=InnoDB DEFAULT CHARSET=utf8



INSERT INTO dept (DEPTNO,DNAME,LOC) VALUES 
(10,'ACCOUNTING','NEW YORK')
,(20,'RESEARCH','DALLAS')
,(30,'SALES','CHICAGO')
,(40,'OPERATIONS','BOSTON')
;


INSERT INTO emp (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) VALUES 
(7369,'SMITH','CLERK',7902.0,STR_TO_DATE('1980-12-17 01:00:00','%Y-%m-%d %H:%i:%s'),800.0,NULL,20)
,(7499,'ALLEN','SALESMAN',7698.0,STR_TO_DATE('1981-02-20 01:00:00','%Y-%m-%d %H:%i:%s'),1600.0,300.0,30)
,(7521,'WARD','SALESMAN',7698.0,STR_TO_DATE('1981-02-22 01:00:00','%Y-%m-%d %H:%i:%s'),1250.0,500.0,30)
,(7566,'JONES','MANAGER',7839.0,STR_TO_DATE('1981-04-02 01:00:00','%Y-%m-%d %H:%i:%s'),2975.0,NULL,20)
,(7654,'MARTIN','SALESMAN',7698.0,STR_TO_DATE('1981-09-28 01:00:00','%Y-%m-%d %H:%i:%s'),1250.0,1400.0,30)
,(7698,'BLAKE','MANAGER',7839.0,STR_TO_DATE('1981-05-01 01:00:00','%Y-%m-%d %H:%i:%s'),2850.0,NULL,30)
,(7782,'CLARK','MANAGER',7839.0,STR_TO_DATE('1981-06-09 01:00:00','%Y-%m-%d %H:%i:%s'),2450.0,NULL,10)
,(7788,'SCOTT','ANALYST',7566.0,STR_TO_DATE('1987-07-13 01:00:00','%Y-%m-%d %H:%i:%s'),3000.0,NULL,20)
,(7839,'KING','PRESIDENT',NULL,STR_TO_DATE('1981-11-17 01:00:00','%Y-%m-%d %H:%i:%s'),5000.0,NULL,10)
,(7844,'TURNER','SALESMAN',7698.0,STR_TO_DATE('1981-09-08 01:00:00','%Y-%m-%d %H:%i:%s'),1500.0,0.0,30)
;
INSERT INTO emp (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) VALUES 
(7876,'ADAMS','CLERK',7788.0,STR_TO_DATE('1987-07-13 01:00:00','%Y-%m-%d %H:%i:%s'),1100.0,NULL,20)
,(7900,'JAMES','CLERK',7698.0,STR_TO_DATE('1981-12-03 01:00:00','%Y-%m-%d %H:%i:%s'),950.0,NULL,30)
,(7902,'FORD','ANALYST',7566.0,STR_TO_DATE('1981-12-03 01:00:00','%Y-%m-%d %H:%i:%s'),3000.0,NULL,20)
,(7934,'MILLER','CLERK',7782.0,STR_TO_DATE('1982-01-23 01:00:00','%Y-%m-%d %H:%i:%s'),1300.0,NULL,10)
;


---------------------------------------------------------------------------------------













create table tb_clientside
     ( bbsno int(10) unsigned primary key auto_increment,
       ref_no int(10) unsigned not null default '0',
       ref_parent int(10) unsigned not null default '0',
       ref_level int(10) unsigned not null default '0',
       ref_step int(10) unsigned not null default '0',
       title varchar(100) not null unique,
       cont varchar(10000),
       writer varchar(50),
       cdate timestamp default '0000-00-00 00:00:00',
       mdate timestamp default now(),
       views int(10) unsigned default '0',
       likes int(10) unsigned default '0',
       afile varchar(1000),
       deleted varchar(5) default 'N'
     )  DEFAULT CHARSET=utf8 ;
alter table tb_clientside add index index_tb_clientside_title (title);
select * from tb_clientside order by ref_no desc, ref_step asc ;


---------------------------------------------------------------------------------------


create table tb_member (
	 regno int primary key auto_increment,
	 name varchar(10) unique,
	 email varchar(100),
	 phone varchar(11),
	 regdate timestamp,
	 filesrc varchar(1000)
 );

insert into tb_member (name, email, phone, regdate, filesrc) values ('강아지', 'doggie@nz.com', '02123211231', now(), null);
insert into tb_member (name, email, phone, regdate, filesrc) values ('고양이', 'cat001@nz.com', '02123112311', now(), null);
insert into tb_member (name, email, phone, regdate, filesrc) values ('송아지', 'cowa01@nz.com', '02712312980', now(), null);

commit ;
 
select * from tb_member ;
---------------------------------------------------------------------------------------



--------------------------------------------------------------------------
Connectby를 쓰지 않고 컬럼3개를 추가하는 경우의 SQL 정리
  -> 컬럼 3개로 하는 인터넷글이 많으나, 사실상의 거의 않됨
  -> 컬럼 3으로는 조회는 가능하나, 부모글을 구별하는 컬럼이 없어서 입력을 자동화하기가 거의 불가능함...
  -> 아래의 설명에 ref_parent라는 컬럼을 추가하고... 글입력시 parent의 값을 확인하여... step값을 입력하도록 로직을 짜야함
      =>  형제글이 있는 경우, 형제글의 step의 최대치+1 / 형제레벨의 글이 없는 경우, 부모의 step값+1로 새글의 step을 입력하면됨
  -> 글 삭제시에도 select count(bbs_no) from Hbbs where ref_no = ${현재글의 ref_no} and ref_parents = ${현재글의 bbsno} 로 
     자식글이 존재하는지를 확인하여 삭제 여부를 결정할 수 있음
--------------------------------------------------------------------------
create table Hbbs (
bbs_no int(10) unsigned NOT NULL AUTO_INCREMENT,
ref_no int(10) unsigned default '0',
ref_level int(10) unsigned default '0',            // 답변의 깊이 (계층 깊이)
ref_step int(10) unsigned default '0',             // 관련된 글내에서 목록을 읽어오는 순서
title varchar(10),
primary key(bbs_no)
) ;


// 1. 1st level insert (no parents article)select ifnull(max(bbs_no), 0)+1 as max_bbs_no from Hbbs;
// --
insert into Hbbs (ref_no, ref_level, ref_step, title) values (1, 0, 0, 'T1') ;
insert into Hbbs (ref_no, ref_level, ref_step, title) values (2, 0, 0, 'T2') ;
insert into Hbbs (ref_no, ref_level, ref_step, title) values (3, 0, 0, 'T3') ;
insert into Hbbs (ref_no, ref_level, ref_step, title) values (4, 0, 0, 'T4') ;


// 2. 1st child article  (3-1)
// insert 시에 기존의 글에서 bbs_no를 조회해서 부모글을 지정
//    && 부모글의 ref_level / ref_step 값을 1씩 증가해줌
insert into Hbbs (ref_no, ref_level, ref_step, title) values (3, 1, 1, 'T3-1') ;


// 3. 2nd child article  (3-1-1)
// insert 시에 기존의 글에서 bbs_no를 조회해서 부모글을 지정
//        (두번째 레벨도 동일하게 첫번째 부모글을 지정)
//    && 부모글의 ref_level / ref_step 값을 1씩 증가해줌
insert into Hbbs (ref_no, ref_level, ref_step, title) values (3, 2, 2, 'T3-1-1') ;


// 4. 1st child & 2nd article (3-2)
// insert는 동일하나 하위에 존재하는 글들의 ref_step을 1씩 증가해주어야함
insert into Hbbs (ref_no, ref_level, ref_step, title) values (3, 1, 2, 'T3-2') ;
// step 에서 기존에 있던 번호를 1씩 update 해줌
update Hbbs set ref_step = ref_step+1 where bbs_no=3 and ref_step > 2

// 5. additonal 1st level article// 부모글에 해당하는 글 입력시는 테이블의 max(bbs_no) 를 이용하여 ref_no를 지정
//     && ref_level / ref_step 은 0
select ifnull(max(bbs_no), 0)+1 as max_bbs_no from Hbbs;
insert into Hbbs (ref_no, ref_level, ref_step, title) values (8, 0, 0, 'T5') ;

----------------------------------------------------------------------------------
select * from Hbbs order by ref_no desc, ref_step asc ;
----------------------------------------------------------------------------------








